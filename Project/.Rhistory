east<-subset(pollt)
east<-subset(pollution)
east <- subset(pollution,region=="east")
head(east)
hist(east,col="green")
hist(east$pm25,col="green")
hist(subset(pollution,region=="east"),col="green")
hist(subset(pollution,region=="west")$pm25,col="green")
plot()
plot(pollution,)
with(pollution, plot(latitude, pm25))
abline(v=12,lwd=2,lty=2)
(h = 12, lwd = 2, lty = 2)
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution,region=="west")
plot(west$latitude ,west$pm25,main="west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
swirl()
library(swirl)
swirl()
windows()
?
;
?Devices
plot
0
eixt
exit
bye()
swirl()
?plot
plot(2,4)
plot(eruptions,waiting)
with(faithful, plot(eruptions, waiting))
title("Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title("Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old
| Faithful Geyser data")
title("Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
plot(cars$speed,cars$speed)
with(cars, plot(speed, dist))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region,state,c(4,1))
xyplot(Life.Exp ~ Income | region,data=state,layout=c(4,1))
xyplot(Life.Exp ~ Income | region,data=state,layout=c(2,2))
ggplot2(mpg)
package(ggplot2)
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ,hwy,data=mpg)
head(airquality)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
boxplot(airquality$Month)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)")
boxplot(Ozone~Month, airquality, xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red",main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality,plot(airquality$Wind))
with(airquality, plot(Wind, Ozone))
title("Ozone and
| Wind in New York City")
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par("fg")
1
1
1
1par('pch')
par('pch')
1
par('lty')
plot(airquality$Wind,airquality$Ozone)
plot(airquality$Wind,type="n",airquality$Ozone)
title(main =  "Wind and Ozone in NYC")
subset(airquality$Month)
subset.default(airquality$Month)
may<-subset(airquality,Month=="May" )
may <- subset(airquality, Month==5)
points(col="green",plot(may$Ozone,may$Wind))
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=17)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",(17,8),("blue","red"))
legend("topright", c(17,8),("blue","red"))
legend("topright", c(17,8),c("blue","red"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=airquality$Wind,lty=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0,0, 2, 0))
plot(airquality$Wind,airquality$Ozone,main =  "Ozone and Wind")
Plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City")
mtext("Ozone and Weather in New York City", outer = TRUE)
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind,airquality)
xyplot(Ozone~Wind,airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month),airquality,layout=c(5,1))
xyplot(Ozone~Wind | Month,airquality,layout=c(5,1))
p<-xyplot(Ozone~Wind,data=airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x"]]
p[["x.limits"]]
table(f)
xyplot(y-x|f)
xyplot(y-x|f,layout=c(2,1)
0
xyplot(y-x|f,layout=c(2,1))
xyplot(Ozone~Wind,data=airquality)
xyplot(y ~ x | f, layout = c(2, 1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"),local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local = TRUE)
str
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit("plot2.R")
myedit("myLabels.R")
pathtofile("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot( price~carat | color*cut, strip = FALSE,pch=20,xlab = myxlab,ylab = myylab,main=mymain)
xyplot( price~carat | color*cut, data=diamonds,strip = FALSE,pch=20,xlab = myxlab,ylab = myylab,main=mymain)
xyplot( price~carat | color*cut, data=diamonds,pch=20,xlab = myxlab,ylab = myylab,main=mymain)
sample(colors(),10)
pal<-colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
colorRampPalette( c("red","blue"))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
pal(seq(0,1,len=6))
p1(6)
hexadecimal(8)
hex(6)
0xcc
colorRampPalette(c("red","yellow")
0
colorRampPalette(c("red","yellow"))
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
p1(20)
showMe(p1(20))
p2(20)
showMe(p2(20))
p2(2)
showMe(p2(2)))
showMe(p2(2))
colorRampPalette(p1)
p1
p1(rgb)
rgb(p1)
?rgb
p3 <- colorRampPalette(c("blue","green"))
p3 <- colorRampPalette(c("blue","green"),alpha=.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5),.3)
plot(x,y,pch=19,col=rgb(0,.5,.5),rgb(.3))
plot(x,y,pch=19,col=rgb(0,.5,.5),rgb(0,.3,0))
plot(x,y,pch=19,col=rgb(0,.5,.5),.3)
plot.xy(x,y,pch=19,col=rgb(0,.5,.5),.3)
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
brewer.pal(3,"BuGn")
cols <- brewer.pal(3, "BuGn")
cols
showMe(cols)
colorRampPalette(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano,col=pal(20))
p1(20)
image(volcano, col = p1(20))
str(mpg)
qplot(displ,hwy)
qxplot(mpg)
qxplot(displ,hwy,mpg)
qplot(displ,hwy,mpg)
qplot(mpg$displ,mpg$hwy,mpg)
plot(mpg$displ,mpg$hwy,mpg)
plot(displ,hwy,mpg)
plot(displ~hwy,mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg,col=drv)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv,c("point","smooth"))
qplot(displ, hwy, data = mpg, color = drv,geom = c("point","smooth"))
qplot(y=hwy,data = mpg,color=drv)
myhigh
qplot(y=hwy,data = mpg,color=drv)
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(displ, hwy, data = mpg, geom=c("point","smooth"),facets=.~drv)
qplot(displ, hwy, data = mpg, geom=c("point","smooth"),facets=.~drv)
g <- ggplot(mpg, aes(displ,hwy) )
g
summary(g)
print(g)
g+geom_point()
geom_smooth(g+geom_point())
geom_smooth()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth("lm")
geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(color="pink",size=4,alpha=1/2)
g + geom_point(aes(color = drv), size = 4, alpha = 1/2)
g + geom_point(aes(color = drv), size = 4, alpha = 1/2)
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!")++ labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!")+ labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!")+ labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv),size=2,alpha=1/2) +geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv),size=2,alpha=1/2) +geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv)) +theme_bw(base_family="Times")
g + geom_point(aes(color = drv)) +theme_bw(base_family="Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line())
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot2(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot2(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot2(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g <-ggplot(testdat,aes(x=myx,y=myy))+geom_abline()
info()
g + geom_point(aes(color = drv)) +theme_bw(base_family="Times")
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot(testdat, aes(x = myx, y = myy))
g <- ggplot(testdat, aes(x = myx, y = myy))
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line(0)
g <- geom_line(0)
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot(testdat)
g + geom_line()
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim=c(-3,3))
g + geom_line() + coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g <- ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g + geom_point()
g + geom_point()
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)
g + geom_point() +facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")
g + geom_point() +facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")
g + geom_point() +
| facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway
| Mileage",title="Swirl Rules!")
g + geom_point() +facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
1
qplot(price,data=diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
qplot(price,data=diamonds,binwidth=18497/30)
brk
brk
counts
qplot(price,data=diamonds,binwidth=18497/30)
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density"
)
)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds, shape=cut)
qplot(carat,price,data=diamonds, shape=cut)
qplot(carat,price,data=diamonds, color=cut)
qplot(carat,price,data=diamonds, color=cut)
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut, facets=.~cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut, facets=.~cut) + geom_smooth(method="lm")
g <- ggplot(diamonds,aes(depth,price))
summary(g)
g <- ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
diamonds$car2 <- cut(diamonds$carat,cutpoints)
diamonds$car2 <- cut(diamonds$carat,cutpoints)
g <- ggplot(diamonds,aes(depth,price)
)
diamonds$car2 <- cut(diamonds$carat,cutpoints)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
swirl()
library(swirl)
swirl()
swirl()
bye()
swirl()
dist(dataFrame)
1
hc <- hclust(distxy)
plot(hc)
plot(hc)
plot(as.dendrogram(hc))
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=1.5,col="blue")
abline(h=.4,col="red")
1
5
abline(h=.4,col="red")
abline(h=.5,col="red")
5
6
1
2
3
3
4
5
6
7
8
8
hc <- hclust(distxy)
12
hc <- hclust(distxy)
hc <- hclust(distxy)
dist(dFsm)
dist(dFsm)
hc
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
heatmap(mt)
mt
mt
plot(denmt)
distmt
swirl()
swirl()
swirl()
swirl()
swirl()
swirl()
swirl()
1
swirl()
packageVersion("swirl")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
7
33/36
deck
54
52
4/52
(1/52)^5
12/52
0
2/50
2/51
.8
1.6*0.8 * 0.5
0.64
mypdf
?mypdf
mypdf ?
;
mypdf(1)
integrate(mypdf,0,1.6)
50^2/4
.5^2/4
4*.5
.5^2/4
sqrt(2)
1
0.997 * 0.985
0.997 * 0.5
info()
.001*99.7
.001*99.7%
.001*.997
.985*.001
0.0003*.001
(1-.985)*.001
(1-.997)*.001
.001*.997 + (1-.997)*.001
.001*.997 + 1-.985)*.001
.001*.997 + (1-.985)*.001
(1-.985)*.001
.997*985
.997*.985
.997*.(1-.997)
.997*(1-.997)
(1-.985)*(1-.001)
equiv_val(.014985)
(1-.985)*(1-.001)
(.997*.001)/(.997*.001 + .015*.999)
.5
1/6
3.5
4
expect_dice
dice_high
d
34
expect_dice(dice_high)
expect_dice(dice_low)
E((X_hi + edh)/2) or .5 *( E(X_hi)+E(X_edl)
3.5
myfunc
integrate(myfunc,0,2)
spop
mean(spop)
allsam
mean(allsam[3,])
apply(allsam,1,mean)
smeans
mean(smeans)
install_from_swirl("Regression Models")
install.packages("UsingR")
swirl()
swirl()
swirl()
swirl
library(swirl)
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
install.packages("Rgtk2")
install.packages("Gtk2")
install.packages("RGtk2")
setwd("D:\\data\data\\Datasicience\\Regularized-Regression-and-Combining-Predictors")
setwd("D:/data/data/Datasicience/Regularized-Regression-and-Combining-Predictors")
install.packages("rattle")
setwd("D:/data/data/Datasicience/Practical-Machine-Learning-Johns-Hopkins/Project")
